// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should match snapshot Request "/" should match snapshot: /@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/" should match snapshot: /@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/" should match snapshot: /@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/api/hello-world" should match snapshot: /api/hello-world@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "application/json; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/api/hello-world" should match snapshot: /api/hello-world@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "application/json; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/api/hello-world" should match snapshot: /api/hello-world@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/client-only-component" should match snapshot: /client-only-component@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/client-only-component" should match snapshot: /client-only-component@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/client-only-component" should match snapshot: /client-only-component@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/custom-handlers" should match snapshot: /custom-handlers@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-custom-header" => {
        "name": "x-custom-header",
        "value": "Hello",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
      "x-route-name" => {
        "name": "x-route-name",
        "value": "",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/custom-handlers" should match snapshot: /custom-handlers@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-custom-header": "Hello",
  "x-powered-by": "@web-widget/web-router",
  "x-route-name": "",
}
`;

exports[`Should match snapshot Request "/custom-handlers" should match snapshot: /custom-handlers@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/dynamic-routes" should match snapshot: /dynamic-routes@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/dynamic-routes" should match snapshot: /dynamic-routes@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/dynamic-routes" should match snapshot: /dynamic-routes@statusText 1`] = `"Not Found"`;

exports[`Should match snapshot Request "/dynamic-routes/1" should match snapshot: /dynamic-routes/1@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/dynamic-routes/1" should match snapshot: /dynamic-routes/1@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/dynamic-routes/1" should match snapshot: /dynamic-routes/1@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/experimental-async-component" should match snapshot: /experimental-async-component@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/experimental-async-component" should match snapshot: /experimental-async-component@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/experimental-async-component" should match snapshot: /experimental-async-component@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/fallback" should match snapshot: /fallback@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/fallback" should match snapshot: /fallback@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/fallback" should match snapshot: /fallback@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/fallback?404" should match snapshot: /fallback?404@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/fallback?404" should match snapshot: /fallback?404@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/fallback?404" should match snapshot: /fallback?404@statusText 1`] = `"Not Found"`;

exports[`Should match snapshot Request "/fallback?500" should match snapshot: /fallback?500@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/fallback?500" should match snapshot: /fallback?500@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/fallback?500" should match snapshot: /fallback?500@statusText 1`] = `"Internal Server Error"`;

exports[`Should match snapshot Request "/fallback?global-404" should match snapshot: /fallback?global-404@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/fallback?global-404" should match snapshot: /fallback?global-404@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
}
`;

exports[`Should match snapshot Request "/fallback?global-404" should match snapshot: /fallback?global-404@statusText 1`] = `"Not Found"`;

exports[`Should match snapshot Request "/fallback?global-500" should match snapshot: /fallback?global-500@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/fallback?global-500" should match snapshot: /fallback?global-500@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
}
`;

exports[`Should match snapshot Request "/fallback?global-500" should match snapshot: /fallback?global-500@statusText 1`] = `"Internal Server Error"`;

exports[`Should match snapshot Request "/fetching-data" should match status: /fetching-data@headers 1`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/fetching-data" should match status: /fetching-data@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/form" should match snapshot: /form@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/form" should match snapshot: /form@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/form" should match snapshot: /form@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/lit-html-template" should match snapshot: /lit-html-template@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/lit-html-template" should match snapshot: /lit-html-template@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/lit-html-template" should match snapshot: /lit-html-template@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/meta" should match snapshot: /meta@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/meta" should match snapshot: /meta@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/meta" should match snapshot: /meta@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/react-and-vue" should match snapshot: /react-and-vue@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/react-and-vue" should match snapshot: /react-and-vue@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/react-and-vue" should match snapshot: /react-and-vue@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/react-import-widgets" should match snapshot: /react-import-widgets@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/react-import-widgets" should match snapshot: /react-import-widgets@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/react-import-widgets" should match snapshot: /react-import-widgets@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/react-server-component" should match snapshot: /react-server-component@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/react-server-component" should match snapshot: /react-server-component@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/react-server-component" should match snapshot: /react-server-component@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/react-streaming" should match status: /react-streaming@headers 1`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/react-streaming" should match status: /react-streaming@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/style" should match snapshot: /style@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/style" should match snapshot: /style@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/style" should match snapshot: /style@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue2-import-widgets" should match snapshot: /vue2-import-widgets@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue2-import-widgets" should match snapshot: /vue2-import-widgets@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue2-import-widgets" should match snapshot: /vue2-import-widgets@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue2-router" should match snapshot: /vue2-router@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue2-router" should match snapshot: /vue2-router@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue2-router" should match snapshot: /vue2-router@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue2-router/about" should match snapshot: /vue2-router/about@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue2-router/about" should match snapshot: /vue2-router/about@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue2-router/about" should match snapshot: /vue2-router/about@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue2-server-component" should match snapshot: /vue2-server-component@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue2-server-component" should match snapshot: /vue2-server-component@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue2-server-component" should match snapshot: /vue2-server-component@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue3-import-widgets" should match snapshot: /vue3-import-widgets@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue3-import-widgets" should match snapshot: /vue3-import-widgets@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue3-import-widgets" should match snapshot: /vue3-import-widgets@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue3-router" should match snapshot: /vue3-router@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue3-router" should match snapshot: /vue3-router@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue3-router" should match snapshot: /vue3-router@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue3-router/about" should match snapshot: /vue3-router/about@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue3-router/about" should match snapshot: /vue3-router/about@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue3-router/about" should match snapshot: /vue3-router/about@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue3-server-component" should match snapshot: /vue3-server-component@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue3-server-component" should match snapshot: /vue3-server-component@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue3-server-component" should match snapshot: /vue3-server-component@statusText 1`] = `"OK"`;

exports[`Should match snapshot Request "/vue3-streaming" should match snapshot: /vue3-streaming@headers 1`] = `
Headers {
  Symbol(headers list): HeadersList {
    "cookies": null,
    Symbol(headers map): Map {
      "access-control-allow-origin" => {
        "name": "access-control-allow-origin",
        "value": "*",
      },
      "connection" => {
        "name": "connection",
        "value": "keep-alive",
      },
      "content-type" => {
        "name": "content-type",
        "value": "text/html; charset=utf-8",
      },
      "keep-alive" => {
        "name": "keep-alive",
        "value": "timeout=5",
      },
      "transfer-encoding" => {
        "name": "transfer-encoding",
        "value": "chunked",
      },
      "x-powered-by" => {
        "name": "x-powered-by",
        "value": "@web-widget/web-router",
      },
    },
    Symbol(headers map sorted): null,
  },
  Symbol(guard): "response",
  Symbol(realm): {
    "settingsObject": {},
  },
}
`;

exports[`Should match snapshot Request "/vue3-streaming" should match snapshot: /vue3-streaming@headers 2`] = `
{
  "access-control-allow-origin": "*",
  "connection": "keep-alive",
  "content-type": "text/html; charset=utf-8",
  "keep-alive": "timeout=5",
  "transfer-encoding": "chunked",
  "x-powered-by": "@web-widget/web-router",
}
`;

exports[`Should match snapshot Request "/vue3-streaming" should match snapshot: /vue3-streaming@statusText 1`] = `"OK"`;
